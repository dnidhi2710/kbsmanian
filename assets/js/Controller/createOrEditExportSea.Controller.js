app.controller('createOrEditExportSeaController', ['$scope', '$location', '$window', '$http', '$routeParams', 'usSpinnerService', 'commonService', '$filter', 'dbConfigService',
    function ($scope, $location, $window, http, $routeParams, spinner, commonService, $filter, configSevice) {
        /* Config */
        //$scope.viewId = $routeParams.id;
        $scope.section1 = true;
        $scope.section7 = false;
        $scope.doc = {};
        $scope.General = {};
        $scope.doc.contains = [];
        $scope.doc.containerObj = [];

        $scope.dateOptions = {
            dateDisabled: false,
            formatYear: 'yy',
            maxDate: new Date(2020, 5, 22),
            //minDate: new Date(),
            startingDay: 1
        };
        $scope.yearValue = configSevice.getJobid();
        $scope.formats = ['dd-MMMM-yyyy', 'yyyy/MM/dd', 'dd.MM.yyyy', 'shortDate'];
        $scope.format = $scope.formats[2];
        $scope.exportTypes = ["Air", "Sea"];
        $scope.typeName = $routeParams.type;
        $scope.exportTypeCode = 'exportSea';
        $scope.doc.exportType = 'Sea';

        function decodeSlash(jobid) {
            if (angular.isDefined(jobid)) {
                jobid = jobid.replace(/[?]/g, "/");
                return jobid;
            }
        }
        init();
        function init() {
            $routeParams.id = decodeSlash($routeParams.id);
            spinner.spin('spinner-1');
            var url = configSevice.getUrl() + "export_sea/export_sea.php";
            if ($routeParams.id === "CREATE") {
                //$scope.doc.importJobNo = "";
                $scope.type = "create";
                $scope.createFlag = true;
                // $scope.disableJobId = true;
                // $scope.doc.importJobNo = "AutoGenerated";
                $scope.updateFlag = false;
                spinner.stop('spinner-1');
            } else {
                $scope.type = "update";
                $scope.createFlag = false;
                $scope.updateFlag = true;
                $scope.doc.importJobNo = $routeParams.id; //+ configSevice.getJobid();
                var obj = {
                    module: "export",
                    action: "view_export_doc",
                    id: $routeParams.id,
                    type: $scope.exportTypeCode
                };
                http.post(url, obj).then(function (response) {
                    if (angular.isDefined(response.data) && response.data.result === true) {
                        $scope.getImportseaData = response.data.data;
                        mapFieldsWithgetObj($scope.getImportseaData);
                        spinner.stop('spinner-1');
                    } else {
                        $scope.errorMsg = response.data.msg;
                        $scope.createFlag = true;
                        $scope.updateFlag = false;
                        // $(showError).modal("show");
                        spinner.stop('spinner-1');
                    }
                });
            }
        }
        function setDateFields(contrNos) {
            if (angular.isArray(contrNos)) {
                for (var i = 0; i < contrNos.length; i++) {
                    contrNos[i].gld = new Date(contrNos[i].gld);
                    contrNos[i].contrOut = new Date(contrNos[i].contrOut);
                }
            }
            return contrNos;
        }
        function mapContents(obj) {
            if (obj.contrNos !== "" && obj.contrNos !== null) {
                obj.contrNos = JSON.parse(obj.contrNos);
                $scope.doc.contains = setDateFields(obj.contrNos);
                if (angular.isArray($scope.doc.contains)) {
                    $scope.doc.containerNumber = $scope.doc.contains.length;
                }
                //  $scope.doc.containerObj = JSON.parse(obj.contrNos);
            }
            if (obj.noOfPkgs !== null && angular.isDefined(obj.noOfPkgs)) {
                $scope.doc.noOfPkgs = obj.noOfPkgs;
            }
            if (obj.content !== null && angular.isDefined(obj.content)) {
                $scope.doc.contents = obj.content;
            }
            if (obj.measurements !== null && angular.isDefined(obj.measurements)) {
                $scope.doc.measurements = obj.measurements;
            }
            if (obj.grossWeight !== null && angular.isDefined(obj.grossWeight)) {
                $scope.doc.grossWeight = obj.grossWeight;
            }
            if (obj.nettWeight !== null && angular.isDefined(obj.nettWeight)) {
                $scope.doc.nettWeight = obj.nettWeight;
            }
        }

        function mapFieldsWithgetObj(getObj) {
            var obj = getObj.ExportDoc.docFields;
            if (angular.isDefined(getObj.ExportDoc.contents)) {
                var ContentObj = getObj.ExportDoc.contents[0];
                mapContents(ContentObj);
            }
            // if (angular.isDefined(obj.impJobId) && obj.impJobId !== null) {
            //   $scope.doc.importJobNo = obj.impJobId;
            // }

            if (angular.isDefined(obj.exportType) && obj.exportType !== null) {
                $scope.doc.exportType = obj.exportType;
            }
            if (angular.isDefined(obj.importDate) && obj.importDate !== null) {
                $scope.doc.importDate = new Date(obj.importDate);
            }
            if (angular.isDefined(obj.shipper) && obj.shipper !== null) {
                $scope.doc.shipper = obj.shipper;
            }
            if (angular.isDefined(obj.consignee) && obj.consignee !== null) {
                $scope.doc.consignee = obj.consignee;
            }
            if (angular.isDefined(obj.bank) && obj.bank !== null) {
                $scope.doc.bank = obj.bank;
            }
            if (angular.isDefined(obj.bank_notify) && obj.bank_notify !== null) {
                $scope.doc.bank_notify = obj.bank_notify;
            }
            if (angular.isDefined(obj.invoiceNo) && obj.invoiceNo !== null) {
                $scope.doc.invoiceNo = obj.invoiceNo;
            }
            if (angular.isDefined(obj.invoiceDate) && obj.invoiceDate !== null) {
                $scope.doc.invoiceDate = new Date(obj.invoiceDate);
            }
            if (angular.isDefined(obj.value) && obj.value !== null) {
                $scope.doc.value = obj.value;
            }
            if (angular.isDefined(obj.grNo) && obj.grNo !== null) {
                $scope.doc.grNo = obj.grNo;
            }
            if (angular.isDefined(obj.grDate) && obj.grDate !== null) {
                $scope.doc.grDate = new Date(obj.grDate);
            }
            if (angular.isDefined(obj.rbiCode) && obj.rbiCode !== null) {
                $scope.doc.rbiCode = obj.rbiCode;
            }
            if (angular.isDefined(obj.billNo) && obj.billNo !== null) {
                $scope.doc.billNo = obj.billNo;
            }
            if (angular.isDefined(obj.billDate) && obj.billDate !== null) {
                $scope.doc.billDate = new Date(obj.billDate);
            }
            if (angular.isDefined(obj.exchangeRate) && obj.exchangeRate !== null) {
                $scope.doc.exchangeRate = obj.exchangeRate;
            }
            if (angular.isDefined(obj.flight) && obj.flight !== null) {
                $scope.doc.flight = obj.flight;
            }
            if (angular.isDefined(obj.arrived) && obj.arrived !== null) {
                $scope.doc.arrived = obj.arrived;
            }
            if (angular.isDefined(obj.departured) && obj.departured !== null) {
                $scope.doc.departured = obj.departured;
            }
            if (angular.isDefined(obj.agent) && obj.agent !== null) {
                $scope.doc.agent = obj.agent;
            }
            if (angular.isDefined(obj.port) && obj.port !== null) {
                $scope.doc.port = obj.port;
            }
            if (angular.isDefined(obj.country) && obj.country !== null) {
                $scope.doc.country = obj.country;
            }
            if (angular.isDefined(obj.emNo) && obj.emNo !== null) {
                $scope.doc.emNo = obj.emNo;
            }
            if (angular.isDefined(obj.remarks) && obj.remarks !== null) {
                $scope.doc.remarks = obj.remarks;
            }
            if (angular.isDefined(obj.value1) && obj.value1 !== null) {
                $scope.doc.value1 = obj.value1;
            }
            if (angular.isDefined(obj.fob) && obj.fob !== null) {
                $scope.doc.fob = obj.fob;
            }
            if (angular.isDefined(obj.frt) && obj.frt !== null) {
                $scope.doc.frt = obj.frt;
            }
            if (angular.isDefined(obj.ins) && obj.ins !== null) {
                $scope.doc.ins = obj.ins;
            }
            if (angular.isDefined(obj.cif) && obj.cif !== null) {
                $scope.doc.cif = obj.cif;
            }
            if (angular.isDefined(obj.eaNo) && obj.eaNo !== null) {
                $scope.doc.eaNo = obj.eaNo;
            }
            if (angular.isDefined(obj.lcNo) && obj.lcNo !== null) {
                $scope.doc.lcNo = obj.lcNo;
            }
            if (angular.isDefined(obj.lcDate) && obj.lcDate !== null) {
                $scope.doc.lcDate = new Date(obj.lcDate);
            }
            if (angular.isDefined(obj.orderNo) && obj.orderNo !== null) {
                $scope.doc.orderNo = obj.orderNo;
            }
            if (angular.isDefined(obj.receiptNo) && obj.receiptNo !== null) {
                $scope.doc.receiptNo = obj.receiptNo;
            }
            if (angular.isDefined(obj.receiptDate1) && obj.receiptDate1 !== null) {
                $scope.doc.receiptDate1 = new Date(obj.receiptDate1);
            }
            if (angular.isDefined(obj.receiptDate2) && obj.receiptDate2 !== null) {
                $scope.doc.receiptDate2 = new Date(obj.receiptDate2);
            }
            if (angular.isDefined(obj.landingNo) && obj.landingNo !== null) {
                $scope.doc.landingNo = obj.landingNo;
            }
            if (angular.isDefined(obj.billDate1) && obj.billDate1 !== null) {
                $scope.doc.billDate1 = new Date(obj.billDate1);
            }
            if (angular.isDefined(obj.billDate2) && obj.billDate2 !== null) {
                $scope.doc.billDate2 = new Date(obj.billDate2);
            }
            if (angular.isDefined(obj.prt) && obj.prt !== null) {
                $scope.doc.prt = obj.prt;
            }
            if (angular.isDefined(obj.exUS) && obj.exUS !== null) {
                $scope.doc.exUS = obj.exUS;
            }
            if (angular.isDefined(obj.exchangeDate) && obj.exchangeDate !== null) {
                $scope.doc.exchangeDate = new Date(obj.exchangeDate);
            }
            if (angular.isDefined(obj.rupees) && obj.rupees !== null) {
                $scope.doc.rupees = obj.rupees;
            }
            if (angular.isDefined(obj.splInstructions) && obj.splInstructions !== null) {
                $scope.doc.splInstructions = obj.splInstructions;
            }
            if (angular.isDefined(obj.awbNo) && obj.awbNo !== null) {
                $scope.doc.awbNo = obj.awbNo;
            }
            if (angular.isDefined(obj.mawbDate) && obj.mawbDate !== null) {
                $scope.doc.mawbDate = new Date(obj.mawbDate);
            }
            if (angular.isDefined(obj.mblDate) && obj.mblDate !== null) {
                $scope.doc.mblDate = new Date(obj.mblDate);
            }
        }

        function setDocNoFields(obj, action) {
            obj.action = action;
            obj.type = $scope.exportTypeCode;
            obj.Container.type = $scope.exportTypeCode;
            obj.exportType = $scope.exportTypeCode;
            if ($routeParams.id !== 'CREATE') {
                obj.id = $routeParams.id;
            }
            if (angular.isDefined($scope.doc.importJobNo) && $scope.doc.importJobNo !== null) {
                obj.impJobId = $scope.doc.importJobNo;
            }
            if (angular.isDefined($scope.doc.importDate) && $scope.doc.importDate !== null) {
                obj.importDate = $filter('date')($scope.doc.importDate, "yyyy-MM-dd");
            }
            if (angular.isDefined($scope.doc.shipper) && $scope.doc.shipper !== null) {
                obj.shipper = $scope.doc.shipper;
            }
            if (angular.isDefined($scope.doc.consignee) && $scope.doc.consignee !== null) {
                obj.consignee = $scope.doc.consignee;
            }
            if (angular.isDefined($scope.doc.bank) && $scope.doc.bank !== null) {
                obj.bank = $scope.doc.bank;
            }
            if (angular.isDefined($scope.doc.bank_notify) && $scope.doc.bank_notify !== null) {
                obj.bank_notify = $scope.doc.bank_notify;
            }
            if (angular.isDefined($scope.doc.invoiceNo) && $scope.doc.invoiceNo !== null) {
                obj.invoiceNo = $scope.doc.invoiceNo;
            }
            if (angular.isDefined($scope.doc.invoiceDate) && $scope.doc.invoiceDate !== null) {
                obj.invoiceDate = $filter('date')($scope.doc.invoiceDate, "yyyy-MM-dd");
            }
            if (angular.isDefined($scope.doc.value) && $scope.doc.value !== null) {
                obj.value = $scope.doc.value;
            }
            if (angular.isDefined($scope.doc.grNo) && $scope.doc.grNo !== null) {
                obj.grNo = $scope.doc.grNo;
            }
            if (angular.isDefined($scope.doc.grDate) && $scope.doc.grDate !== null) {
                obj.grDate = $filter('date')($scope.doc.grDate, "yyyy-MM-dd");
            }
            if (angular.isDefined($scope.doc.rbiCode) && $scope.doc.rbiCode !== null) {
                obj.rbiCode = $scope.doc.rbiCode;
            }
            if (angular.isDefined($scope.doc.billNo) && $scope.doc.billNo !== null) {
                obj.billNo = $scope.doc.billNo;
            }
            if (angular.isDefined($scope.doc.billDate) && $scope.doc.billDate !== null) {
                obj.billDate = $filter('date')($scope.doc.billDate, "yyyy-MM-dd");
            }
            if (angular.isDefined($scope.doc.exchangeRate) && $scope.doc.exchangeRate !== null) {
                obj.exchangeRate = $scope.doc.exchangeRate;
            }
            if (angular.isDefined($scope.doc.flight) && $scope.doc.flight !== null) {
                obj.flight = $scope.doc.flight;
            }
            if (angular.isDefined($scope.doc.arrived) && $scope.doc.arrived !== null) {
                obj.arrived = $scope.doc.arrived;
            }
            if (angular.isDefined($scope.doc.departured) && $scope.doc.departured !== null) {
                obj.departured = $scope.doc.departured;
            }
            if (angular.isDefined($scope.doc.agent) && $scope.doc.agent !== null) {
                obj.agent = $scope.doc.agent;
            }
            if (angular.isDefined($scope.doc.port) && $scope.doc.port !== null) {
                obj.port = $scope.doc.port;
            }
            if (angular.isDefined($scope.doc.country) && $scope.doc.country !== null) {
                obj.country = $scope.doc.country;
            }
            if (angular.isDefined($scope.doc.emNo) && $scope.doc.emNo !== null) {
                obj.emNo = $scope.doc.emNo;
            }
            if (angular.isDefined($scope.doc.remarks) && $scope.doc.remarks !== null) {
                obj.remarks = $scope.doc.remarks;
            }
            if (angular.isDefined($scope.doc.value1) && $scope.doc.value1 !== null) {
                obj.value1 = $scope.doc.value1;
            }
            if (angular.isDefined($scope.doc.fob) && $scope.doc.fob !== null) {
                obj.fob = $scope.doc.fob;
            }
            if (angular.isDefined($scope.doc.frt) && $scope.doc.frt !== null) {
                obj.frt = $scope.doc.frt;
            }
            if (angular.isDefined($scope.doc.ins) && $scope.doc.ins !== null) {
                obj.ins = $scope.doc.ins;
            }
            if (angular.isDefined($scope.doc.cif) && $scope.doc.cif !== null) {
                obj.cif = $scope.doc.cif;
            }
            if (angular.isDefined($scope.doc.eaNo) && $scope.doc.eaNo !== null) {
                obj.eaNo = $scope.doc.eaNo;
            }
            if (angular.isDefined($scope.doc.lcNo) && $scope.doc.lcNo !== null) {
                obj.lcNo = $scope.doc.lcNo;
            }
            if (angular.isDefined($scope.doc.lcDate) && $scope.doc.lcDate !== null) {
                obj.lcDate = $filter('date')($scope.doc.lcDate, "yyyy-MM-dd");
            }
            if (angular.isDefined($scope.doc.orderNo) && $scope.doc.orderNo !== null) {
                obj.orderNo = $scope.doc.orderNo;
            }
            if (angular.isDefined($scope.doc.receiptNo) && $scope.doc.receiptNo !== null) {
                obj.receiptNo = $scope.doc.receiptNo;
            }
            if (angular.isDefined($scope.doc.receiptDate1) && $scope.doc.receiptDate1 !== null) {
                obj.receiptDate1 = $filter('date')($scope.doc.receiptDate1, "yyyy-MM-dd");
            }
            if (angular.isDefined($scope.doc.receiptDate2) && $scope.doc.receiptDate2 !== null) {
                obj.receiptDate2 = $filter('date')($scope.doc.receiptDate2, "yyyy-MM-dd");
            }
            if (angular.isDefined($scope.doc.landingNo) && $scope.doc.landingNo !== null) {
                obj.landingNo = $scope.doc.landingNo;
            }
            if (angular.isDefined($scope.doc.billDate1) && $scope.doc.billDate1 !== null) {
                obj.billDate1 = $filter('date')($scope.doc.billDate1, "yyyy-MM-dd");
            }
            if (angular.isDefined($scope.doc.billDate2) && $scope.doc.billDate2 !== null) {
                obj.billDate2 = $filter('date')($scope.doc.billDate2, "yyyy-MM-dd");
            }
            if (angular.isDefined($scope.doc.prt) && $scope.doc.prt !== null) {
                obj.prt = $scope.doc.prt;
            }
            if (angular.isDefined($scope.doc.exUS) && $scope.doc.exUS !== null) {
                obj.exUS = $scope.doc.exUS;
            }
            if (angular.isDefined($scope.doc.exchangeDate) && $scope.doc.exchangeDate !== null) {
                obj.exchangeDate = $filter('date')($scope.doc.exchangeDate, "yyyy-MM-dd");
            }
            if (angular.isDefined($scope.doc.rupees) && $scope.doc.rupees !== null) {
                obj.rupees = $scope.doc.rupees;
            }
            if (angular.isDefined($scope.doc.splInstructions) && $scope.doc.splInstructions !== null) {
                obj.splInstructions = $scope.doc.splInstructions;
            }
            if (angular.isDefined($scope.doc.awbNo) && $scope.doc.awbNo !== null) {
                obj.awbNo = $scope.doc.awbNo;
            }
            if (angular.isDefined($scope.doc.mawbDate) && $scope.doc.mawbDate !== null) {
                obj.mawbDate = $filter('date')($scope.doc.mawbDate, "yyyy-MM-dd");
            }
            if (angular.isDefined($scope.doc.mblDate) && $scope.doc.mblDate !== null) {
                obj.mblDate = $filter('date')($scope.doc.mblDate, "yyyy-MM-dd");
            }
            if (angular.isDefined($scope.doc.contains) && $scope.doc.contains.length > 0) {
                $scope.doc.contains = mapDateFields($scope.doc.contains);
                obj.Container.Contr = JSON.stringify($scope.doc.contains);
            }
            if (angular.isDefined($scope.doc.noOfPkgs) && $scope.doc.noOfPkgs !== null) {
                obj.Container.noOfPkgs = $scope.doc.noOfPkgs;
            }
            if (angular.isDefined($scope.doc.contents) && $scope.doc.contents !== null) {
                obj.Container.content = $scope.doc.contents;
            }
            if (angular.isDefined($scope.doc.measurements) && $scope.doc.measurements !== null) {
                obj.Container.measurements = $scope.doc.measurements;
            }
            if (angular.isDefined($scope.doc.grossWeight) && $scope.doc.grossWeight !== null) {
                obj.Container.grossWeight = $scope.doc.grossWeight;
            }
            if (angular.isDefined($scope.doc.nettWeight) && $scope.doc.nettWeight !== null) {
                obj.Container.nettWeight = $scope.doc.nettWeight;
            }

            return obj;
        }

        function mapDateFields(contains) {
            for (var i = 0; i < contains.length; i++) {
                contains[i].gld = $filter('date')(contains[i].gld, "yyyy-MM-dd");
                contains[i].contrOut = $filter('date')(contains[i].contrOut, "yyyy-MM-dd");
            }
            return contains;
        }
        $scope.saveContainerObj = function () {
            $scope.doc.contains = $scope.doc.containerObj;
            $scope.addedMsg = "Container Saved!";
        };

        $scope.addContainerDetails = function () {
            $scope.doc.containerObj = [];
            for (var i = 0; i < $scope.doc.containerNumber; i++) {
                var container = {
                    containerNo: i + 1,
                    containerName: "",
                    gld: "",
                    contrOut: ""
                };
                $scope.doc.containerObj.push(container);
            }
        };

        $scope.addContainerObj = function () {
            $scope.addedMsg = "";
            $(showContainer).modal("show");
            $scope.editFlag = false;
        };

        $scope.editContainerObj = function () {
            $scope.addedMsg = "";
            $scope.doc.containerObj = $scope.doc.contains;
            $scope.doc.containerNumber = $scope.doc.containerObj.length;
            $(showContainer).modal("show");
            $scope.editFlag = true;
        };
        /* Delete the selected record */
        $scope.removeSelectedContainer = function (id) {
            var index = _.findIndex($scope.doc.containerObj, { containerNo: id });
            if (index !== -1) {
                if (index === 0 && $scope.doc.containerObj.length === 1) {
                    $scope.doc.containerObj = [];
                } else {
                    $scope.doc.containerObj.splice(index, 1);
                }
            }
        };

        $scope.addAdditionalContainer = function () {
            var i = 0;
            if (angular.isArray($scope.doc.containerObj)) {
                i = $scope.doc.containerObj.length + 1;
            }
            var container = {
                containerNo: i,
                containerName: "",
                gld: "",
                contrOut: ""
            };
            $scope.doc.containerObj.push(container);
        };

        $scope.cargoReceipts = [];
        var cargoReceiptObj = {
            "number": "",
            "receiptDate": "",
            "truckNo": "",
            "noOfPackages": "",
            "godown": ""
        };

        $scope.removeSelectedCargo = function (id) {
            var index = _.findIndex($scope.cargoReceipts, { number: id });
            if (index !== -1) {
                if (index === 0 && $scope.cargoReceipts.length === 1) {
                    $scope.cargoReceipts = [];
                } else {
                    $scope.cargoReceipts.splice(index, 1);
                }
            }
        };

        $scope.addAdditionalCargo = function () {
            var i = 0;
            if (angular.isArray($scope.cargoReceipts)) {
                i = $scope.cargoReceipts.length + 1;
            }
            var cargoReceiptObj = {
                "number": i,
                "receiptDate": "",
                "truckNo": "",
                "noOfPackages": "",
                "godown": ""
            };
            $scope.cargoReceipts.push(cargoReceiptObj);
        }
        $scope.delContainerObj = function () {
            $scope.doc.contains.pop();
        };

        $scope.saveDocFields = function () {
            $scope.alertMsg = "";
            $scope.successMsg = "";
            $scope.errorMsg = "";
            var url = configSevice.getUrl() + "export_sea/export_sea.php";
            var obj = commonService.getExportDocObj();
            if ($scope.createFlag) {
                obj = setDocNoFields(obj, "create_export_doc");
                $scope.action = "Created";
            } else {
                obj = setDocNoFields(obj, "update_export_doc");
                obj.id = $routeParams.id;
                $scope.action = "Updated";
            }
            var validate = commonService.saveValidations(obj);
            if (validate.flag === true) {
                http.post(url, obj).then(function (data) {
                    if (angular.isDefined(data.data) && data.data.infocode === "CREATEEXPORTDOCSUCCESS" && $scope.createFlag) {
                        $scope.successMsg = "Doc Fields " + $scope.action + " Successfully for " + $scope.doc.importJobNo + " !";
                        $scope.successMsg = data.data.message;
                        if ($scope.createFlag) {
                            $scope.updateFlag = true;
                            $scope.createFlag = false;
                        }
                        // $scope.doc.importJobNo = data.data.doc_id + configSevice.getJobid();
                        $(showSuccess).modal("show");
                    } else if (angular.isDefined(data.data) && data.data.infocode === "UPDATEEXPORTDOCSUCCESS" && !$scope.createFlag) {
                        $scope.successMsg = "Doc Fields " + $scope.action + " Successfully for " + $scope.doc.importJobNo + " !";
                        $(showSuccess).modal("show");
                    } else {
                        $scope.errorMsg = data.data.message;
                        $(showError).modal("show");
                    }
                }, function (error) {
                    $scope.error = error;
                });
            } else {
                $scope.alertMsg = validate.msg;
                $(showAlert).modal("show");
            }
        };

        function initRemarks() {
            $routeParams.id = decodeSlash($routeParams.id);
            spinner.spin('spinner-1');
            var url = configSevice.getUrl() + "export_sea/export_sea.php";
            if ($routeParams.id === "CREATE") {
                $scope.remarkType = "create";
                $scope.remarkCreateFlag = true;
                $scope.remarkUpdateFlag = false;
                spinner.stop('spinner-1');
            } else {
                $scope.remarkType = "update";
                $scope.remarkCreateFlag = false;
                $scope.remarkUpdateFlag = true;
                $scope.doc.importJobNo = $routeParams.id; //+ configSevice.getJobid();
                var obj = {
                    module: "export",
                    action: "view_export_remark",
                    id: $routeParams.id,
                    exportType: $scope.exportTypeCode
                };
                http.post(url, obj).then(function (response) {
                    if (angular.isDefined(response.data) && response.data.result === true) {
                        $scope.getRemarksData = response.data.data;
                        mapFieldsWithRemarksObj($scope.getRemarksData);
                        spinner.stop('spinner-1');
                    } else {
                        $scope.errorMsg = response.data.msg;
                        $scope.remarkCreateFlag = true;
                        $scope.remarkUpdateFlag = false;
                        // $(showError).modal("show");
                        spinner.stop('spinner-1');
                    }
                });
            }
        }

        function mapFieldsWithRemarksObj(obj) {
            if (angular.isArray(obj)) {
                obj = obj[0];
            }
            if (obj.progress && obj.progress !== "") {
                $scope.doc.progress = obj.progress;
            }

            obj.cargoReceipts = JSON.parse(obj.cargoReceipts);
            $scope.cargoReceipts = setRemarkDateFields(obj.cargoReceipts);
        }

        function setRemarkDateFields(cargo) {
            for (var i = 0; i < cargo.length; i++) {
                cargo[i].receiptDate = new Date(cargo[i].receiptDate);
            }
            return cargo;
        }

        function setRemarksFields(obj, action) {
            obj.action = action;
            if (angular.isDefined($scope.doc.importJobNo) && $scope.doc.importJobNo !== null) {
                obj.impJobId = $scope.doc.importJobNo;
            }
            if ($scope.doc.progress && $scope.doc.progress !== "") {
                obj.progress = $scope.doc.progress;
            }
            obj.exportType = $scope.exportTypeCode;
            var cargoReceipts = angular.copy($scope.cargoReceipts);
            cargoReceipts = mapRemarkDateFields(cargoReceipts);
            obj.cargoReceipts = JSON.stringify(cargoReceipts);
            return obj;
        }

        function mapRemarkDateFields(cargo) {
            if (angular.isArray(cargo)) {
                for (var i = 0; i < cargo.length; i++) {
                    cargo[i].receiptDate = $filter('date')(cargo[i].receiptDate, "yyyy-MM-dd");
                }
            }
            return cargo;
        }

        $scope.saveRemarkFields = function () {
            $scope.alertMsg = "";
            $scope.successMsg = "";
            $scope.errorMsg = "";
            var url = configSevice.getUrl() + "export_sea/export_sea.php";
            var obj = commonService.getExportRemarkObj();
            if ($scope.remarkCreateFlag) {
                obj = setRemarksFields(obj, "create_export_remark");
                $scope.action = "Created";
            } else {
                obj = setRemarksFields(obj, "update_export_remark");
                obj.id = $routeParams.id;
                $scope.action = "Updated";
            }
            var validate = commonService.saveValidations(obj);
            if (validate.flag === true) {
                http.post(url, obj).then(function (data) {
                    if (angular.isDefined(data.data) && data.data.infocode === "CREATEEXPORTREMARKSUCCESS" && $scope.remarkCreateFlag) {
                        $scope.successMsg = "Remarks " + $scope.action + " Successfully for " + $scope.doc.importJobNo + " !";
                        //  $scope.successMsg = data.data.message;
                        if ($scope.remarkCreateFlag) {
                            $scope.remarkUpdateFlag = true;
                            $scope.remarkCreateFlag = false;
                        }
                        // $scope.doc.importJobNo = data.data.doc_id + configSevice.getJobid();
                        $(showSuccess).modal("show");
                    } else if (angular.isDefined(data.data) && data.data.infocode === "UPDATEEXPORTREMARKSUCCESS" && !$scope.remarkCreateFlag) {
                        $scope.successMsg = "Remarks " + $scope.action + " Successfully for " + $scope.doc.importJobNo + " !";
                        $(showSuccess).modal("show");
                    } else {
                        $scope.errorMsg = data.data.message;
                        $(showError).modal("show");
                    }
                }, function (error) {
                    $scope.error = error;
                });
            } else {
                $scope.alertMsg = validate.msg;
                $(showAlert).modal("show");
            }
        };

        $scope.activeMenu = function (val) {
            if (val == 1) {
                $scope.section1 = true;
                $scope.section2 = false;
                $scope.section3 = false;
                $scope.section4 = false;
            }
            else if (val == 2) {
                $scope.section1 = false;
                $scope.section2 = true;
                $scope.section3 = false;
                $scope.section4 = false;
                initRemarks();
            }
            else if (val == 3) {
                $scope.section1 = false;
                $scope.section2 = false;
                $scope.section3 = true;
                $scope.section4 = false;
            }
            else if (val == 4) {
                $scope.section1 = false;
                $scope.section2 = false;
                $scope.section3 = false;
                $scope.section4 = true;
            }
        };

    }]);
