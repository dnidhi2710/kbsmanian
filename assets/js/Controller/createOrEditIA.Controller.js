app.controller('createOrEditIAController', ['$scope', '$location', '$window', '$http', 'usSpinnerService', 'commonService', '$filter', '$routeParams', 'dbConfigService',
    function ($scope, $location, $window, http, spinner, commonService, $filter, $routeParams, configSevice) {
        /* Config */
        $scope.section1 = true;
        $scope.section2 = false;
        $scope.section3 = false;
        $scope.section4 = false;
        $scope.section5 = false;
        $scope.section6 = false;
        $scope.section7 = false;
        $scope.doc = {};
        $scope.General = {};
        $scope.doc.contains = [];
        $scope.type = "create";
        $scope.dateOptions = {
            dateDisabled: false,
            formatYear: 'yy',
            maxDate: new Date(2020, 5, 22),
            //minDate: new Date(),
            startingDay: 1
        };
        init();
        $scope.yearValue = configSevice.getJobid();
        function decodeSlash(jobid) {
            jobid = jobid.replace(/[?]/g, "/");
            return jobid;
        }

        $scope.formats = ['dd-MMMM-yyyy', 'yyyy/MM/dd', 'dd.MM.yyyy', 'shortDate'];
        $scope.format = $scope.formats[2];

        function init() {
            $routeParams.id = decodeSlash($routeParams.id);
            spinner.spin('spinner-1');
            var url = configSevice.getUrl() + "import_air/import_air_service.php";
            if ($routeParams.id === "CREATE") {
                //$scope.doc.importJobNo = "";
                $scope.type = "create";
                $scope.createFlag = true;
                // $scope.disableJobId = true;
                // $scope.doc.importJobNo = "AutoGenerated";
                $scope.updateFlag = false;
                spinner.stop('spinner-1');
            } else {
                $scope.type = "update";
                $scope.createFlag = false;
                $scope.updateFlag = true;
                $scope.doc.importJobNo = $routeParams.id; //+ configSevice.getJobid();
                var obj = {
                    module: "importair",
                    action: "view_import_air_doc",
                    id: $routeParams.id,
                    type: "air"
                };
                http.post(url, obj).then(function (response) {
                    if (angular.isDefined(response.data) && response.data.result === true) {
                        $scope.getImportseaData = response.data.data;
                        mapFieldsWithgetObj($scope.getImportseaData);
                        spinner.stop('spinner-1');
                    } else {
                        $scope.errorMsg = response.data.msg;
                        $scope.createFlag = true;
                        $scope.updateFlag = false;
                        //$(showError).modal("show");
                        spinner.stop('spinner-1');
                    }
                });
            }
        }
        function setDateFields(contrNos) {
            if (angular.isArray(contrNos)) {
                for (var i = 0; i < contrNos.length; i++) {
                    contrNos[i].gld = new Date(contrNos[i].gld);
                    contrNos[i].contrOut = new Date(contrNos[i].contrOut);
                }
            }
            return contrNos;
        }
        function mapContents(obj) {
            if (obj.contrNos !== "" && obj.contrNos !== null) {
                obj.contrNos = JSON.parse(obj.contrNos);
                $scope.doc.contains = setDateFields(obj.contrNos);
                if (angular.isArray($scope.doc.contains)) {
                    $scope.doc.containerNumber = $scope.doc.contains.length;
                }
            }
            if (obj.noOfPkgs !== null && angular.isDefined(obj.noOfPkgs)) {
                $scope.doc.noOfPkgs = obj.noOfPkgs;
            }
            if (obj.content !== null && angular.isDefined(obj.content)) {
                $scope.doc.contents = obj.content;
            }
            if (obj.measurements !== null && angular.isDefined(obj.measurements)) {
                $scope.doc.measurements = obj.measurements;
            }
            if (obj.grossWeight !== null && angular.isDefined(obj.grossWeight)) {
                $scope.doc.grossWeight = obj.grossWeight;
            }
            if (obj.nettWeight !== null && angular.isDefined(obj.nettWeight)) {
                $scope.doc.nettWeight = obj.nettWeight;
            }
        }

        function mapGeneralType(obj) {
            if (obj.jobType !== null && angular.isDefined(obj.jobType) && obj.jobType !== "") {
                $scope.General = JSON.parse(obj.jobType);
            }
        }

        function mapFieldsWithgetObj(getObj) {
            var obj = getObj.importAirDoc.docFields[0];
            if (angular.isDefined(getObj.importAirDoc.contents)) {
                var ContentObj = getObj.importAirDoc.contents[0];
                mapContents(ContentObj);
            }
            // if (angular.isDefined(obj.impJobId) && obj.impJobId !== null) {
            //   $scope.doc.importJobNo = obj.impJobId;
            // }
            mapGeneralType(obj);

            if (angular.isDefined(obj.importedDate) && obj.importedDate !== null) {
                $scope.doc.importDate = new Date(obj.importedDate);
            }
            if (angular.isDefined(obj.partyRef) && obj.partyRef !== null) {
                $scope.doc.partyRef = obj.partyRef;
            }
            if (angular.isDefined(obj.consignee) && obj.consignee !== null) {
                $scope.doc.consignee = obj.consignee;
            }
            if (angular.isDefined(obj.licenseDetail) && obj.licenseDetail !== null) {
                $scope.doc.licnse = obj.licenseDetail;
            }
            if (angular.isDefined(obj.buffNo) && obj.buffNo !== null) {
                $scope.doc.buffNo = obj.buffNo;
            }
            if (angular.isDefined(obj.address) && obj.address !== null) {
                $scope.doc.address = obj.address;
            }
            if (angular.isDefined(obj.hsOrBtAccParty) && obj.hsOrBtAccParty !== null) {
                $scope.doc.hsBtAcParty = obj.hsOrBtAccParty;
            }
            if (angular.isDefined(obj.supplier) && obj.supplier !== null) {
                $scope.doc.supplierName = obj.supplier;
            }
            if (angular.isDefined(obj.invoiceNo) && obj.invoiceNo !== null) {
                $scope.doc.invNo = obj.invoiceNo;
            }
            if (angular.isDefined(obj.invoiceDate) && obj.invoiceDate !== null) {
                $scope.doc.invDate = new Date(obj.invoiceDate);
            }
            if (angular.isDefined(obj.content) && obj.content !== null && obj.content.length > 0) {
                $scope.doc.contains = obj.content;
            }
            if (angular.isDefined(obj.flightDtls) && obj.flightDtls !== null) {
                $scope.doc.flightDetails = obj.flightDtls;
            }
            if (angular.isDefined(obj.dueDate) && obj.dueDate !== null) {
                $scope.doc.flightdue = new Date(obj.dueDate);
            }
            if (angular.isDefined(obj.arrival) && obj.arrival !== null) {
                $scope.doc.arrival = obj.arrival;
            }
            if (angular.isDefined(obj.gdd) && obj.gdd !== null) {
                $scope.doc.gdd = obj.gdd;
            }
            if (angular.isDefined(obj.lfd) && obj.lfd !== null) {
                $scope.doc.lfd = obj.lfd;
            }
            if (angular.isDefined(obj.advisedBy) && obj.advisedBy !== null) {
                $scope.doc.advisedby = obj.advisedBy;
            }
            if (angular.isDefined(obj.advisedOn) && obj.advisedOn !== null) {
                $scope.doc.advisedOn = new Date(obj.advisedOn);
            }
            if (angular.isDefined(obj.shed) && obj.shed !== null) {
                $scope.doc.shed = obj.shed;
            }
            if (angular.isDefined(obj.warehouse) && obj.warehouse !== null) {
                $scope.doc.warehouse = obj.warehouse;
            }
            if (angular.isDefined(obj.license) && obj.license !== null) {
                $scope.doc.license = obj.license;
            }
            if (angular.isDefined(obj.licenseValue) && obj.licenseValue !== null) {
                $scope.doc.licenseValue = obj.licenseValue;
            }
            if (angular.isDefined(obj.balance) && obj.balance !== null) {
                $scope.doc.balance = obj.balance;
            }
            if (angular.isDefined(obj.mawbNo) && obj.mawbNo !== null) {
                $scope.doc.mawbNo = obj.mawbNo;
            }
            if (angular.isDefined(obj.hawbNo) && obj.hawbNo !== null) {
                $scope.doc.hawbNo = obj.hawbNo;
            }
            if (angular.isDefined(obj.hawbDate) && obj.hawbDate !== null) {
                $scope.doc.hawbDate = new Date(obj.hawbDate);
            }
            if (angular.isDefined(obj.doNo) && obj.doNo !== null) {
                $scope.doc.doNo = obj.doNo;
            }
            if (angular.isDefined(obj.doDate) && obj.doDate !== null) {
                $scope.doc.doDate = new Date(obj.doDate);
            }
            if (angular.isDefined(obj.invoiceValue) && obj.invoiceValue !== null) {
                $scope.doc.invoiceValue = obj.invoiceValue;
            }
        }

        function setDocNoFields(obj, action) {
            obj.module = "airimport";
            obj.action = action;
            obj.type = "air";
            obj.Container.type = "air";
            if ($routeParams.id !== 'CREATE') {
                obj.id = $routeParams.id;
            }
            if (angular.isDefined($scope.doc.importJobNo) && $scope.doc.importJobNo !== null) {
                obj.impJobId = $scope.doc.importJobNo;
                obj.Container.impJobId = $scope.doc.importJobNo;
            }
            if (angular.isDefined($scope.doc.importDate) && $scope.doc.importDate !== null) {
                obj.importedDate = $filter('date')($scope.doc.importDate, "yyyy-MM-dd");
            }
            if (angular.isDefined($scope.doc.partyRef) && $scope.doc.partyRef !== null) {
                obj.partyRef = $scope.doc.partyRef;
            }
            if (angular.isDefined($scope.doc.consignee) && $scope.doc.consignee !== null) {
                obj.consignee = $scope.doc.consignee;
            }
            if (angular.isDefined($scope.doc.address) && $scope.doc.address !== null) {
                obj.address = $scope.doc.address;
            }
            if (angular.isDefined($scope.doc.licnse) && $scope.doc.licnse !== null) {
                obj.licenseDetail = $scope.doc.licnse;
            }
            if (angular.isDefined($scope.doc.buffNo) && $scope.doc.buffNo !== null) {
                obj.buffNo = $scope.doc.buffNo;
            }
            if (angular.isDefined($scope.doc.hsBtAcParty) && $scope.doc.hsBtAcParty !== null) {
                obj.hsOrBtAccParty = $scope.doc.hsBtAcParty;
            }
            if (angular.isDefined($scope.doc.supplierName) && $scope.doc.supplierName !== null) {
                obj.supplier = $scope.doc.supplierName;
            }
            if (angular.isDefined($scope.doc.invNo) && $scope.doc.invNo !== null) {
                obj.invoiceNo = $scope.doc.invNo;
            }
            if (angular.isDefined($scope.doc.invDate) && $scope.doc.invDate !== null) {
                obj.invoiceDate = $filter('date')($scope.doc.invDate, "yyyy-MM-dd");
            }
            if (angular.isDefined($scope.doc.contains) && $scope.doc.contains.length > 0) {
                $scope.doc.contains = mapDateFields($scope.doc.contains);
                obj.Container.Contr = JSON.stringify($scope.doc.contains);
            }
            if (angular.isDefined($scope.doc.noOfPkgs) && $scope.doc.noOfPkgs !== null) {
                obj.Container.noOfPkgs = $scope.doc.noOfPkgs;
            }
            if (angular.isDefined($scope.doc.contents) && $scope.doc.contents !== null) {
                obj.Container.content = $scope.doc.contents;
            }
            if (angular.isDefined($scope.doc.measurements) && $scope.doc.measurements !== null) {
                obj.Container.measurements = $scope.doc.measurements;
            }
            if (angular.isDefined($scope.doc.grossWeight) && $scope.doc.grossWeight !== null) {
                obj.Container.grossWeight = $scope.doc.grossWeight;
            }
            if (angular.isDefined($scope.doc.nettWeight) && $scope.doc.nettWeight !== null) {
                obj.Container.nettWeight = $scope.doc.nettWeight;
            }
            if (angular.isDefined($scope.doc.flightDetails) && $scope.doc.flightDetails !== null) {
                obj.flightDtls = $scope.doc.flightDetails;
            }
            if (angular.isDefined($scope.doc.flightdue) && $scope.doc.flightdue !== null) {
                obj.dueDate = $filter('date')($scope.doc.flightdue, "yyyy-MM-dd");
            }
            if (angular.isDefined($scope.doc.arrival) && $scope.doc.arrival !== null) {
                obj.arrival = $scope.doc.arrival;
            }
            if (angular.isDefined($scope.doc.gdd) && $scope.doc.gdd !== null) {
                obj.gdd = $scope.doc.gdd;
            }
            if (angular.isDefined($scope.doc.lfd) && $scope.doc.lfd !== null) {
                obj.lfd = $scope.doc.lfd;
            }
            if (angular.isDefined($scope.doc.advisedby) && $scope.doc.advisedby !== null) {
                obj.advisedBy = $scope.doc.advisedby;
            }
            if (angular.isDefined($scope.doc.advisedOn) && $scope.doc.advisedOn !== null) {
                obj.advisedOn = $filter('date')($scope.doc.advisedOn, "yyyy-MM-dd");
            }
            if (angular.isDefined($scope.doc.shed) && $scope.doc.shed !== null) {
                obj.shed = $scope.doc.shed;
            }
            if (angular.isDefined($scope.doc.warehouse) && $scope.doc.warehouse !== null) {
                obj.warehouse = $scope.doc.warehouse;
            }
            if (angular.isDefined($scope.doc.license) && $scope.doc.license !== null) {
                obj.license = $scope.doc.license;
            }
            if (angular.isDefined($scope.doc.licenseValue) && $scope.doc.licenseValue !== null) {
                obj.licenseValue = $scope.doc.licenseValue;
            }
            if (angular.isDefined($scope.doc.balance) && $scope.doc.balance !== null) {
                obj.balance = $scope.doc.balance;
            }
            if (angular.isDefined($scope.doc.mawbNo) && $scope.doc.mawbNo !== null) {
                obj.mawbNo = $scope.doc.mawbNo;
            }
            if (angular.isDefined($scope.doc.hawbNo) && $scope.doc.hawbNo !== null) {
                obj.hawbNo = $scope.doc.hawbNo;
            }
            if (angular.isDefined($scope.doc.hawbDate) && $scope.doc.hawbDate !== null) {
                obj.hawbDate = $filter('date')($scope.doc.hawbDate, "yyyy-MM-dd");
            }
            if (angular.isDefined($scope.doc.doNo) && $scope.doc.doNo !== null) {
                obj.doNo = $scope.doc.doNo;
            }
            if (angular.isDefined($scope.doc.doDate) && $scope.doc.doDate !== null) {
                obj.doDate = $filter('date')($scope.doc.doDate, "yyyy-MM-dd");
            }
            if (angular.isDefined($scope.doc.invoiceValue) && $scope.doc.invoiceValue !== null) {
                obj.invoiceValue = $scope.doc.invoiceValue;
            }

            obj.jobType = JSON.stringify(setGeneralFields());
            return obj;
        }

        function mapDateFields(contains) {
            for (var i = 0; i < contains.length; i++) {
                contains[i].gld = $filter('date')(contains[i].gld, "yyyy-MM-dd");
                contains[i].contrOut = $filter('date')(contains[i].contrOut, "yyyy-MM-dd");
            }
            return contains;
        }

        function setGeneralFields() {
            var jobType = commonService.getGeneralObj();
            if (angular.isDefined($scope.General)) {
                if ($scope.General.Bonding === true) {
                    jobType.Bonding = true;
                }
                if ($scope.General.houseConsumption === true) {
                    jobType.houseConsumption = true;
                }
                if ($scope.General.exbond === true) {
                    jobType.exbond = true;
                }
                if ($scope.General.edi === true) {
                    jobType.edi = true;
                }
                if ($scope.General.bulk === true) {
                    jobType.bulk = true;
                }
                if ($scope.General.deec === true) {
                    jobType.deec = true;
                }
                if ($scope.General.depb === true) {
                    jobType.depb = true;
                }
                if ($scope.General.rms === true) {
                    jobType.rms = true;
                }
                if ($scope.General.openOrder === true) {
                    jobType.openOrder = true;
                }
                if ($scope.General.breakBulk === true) {
                    jobType.breakBulk = true;
                }
            }
            return jobType;
        }

        $scope.saveContainerObj = function () {
            $scope.doc.contains = $scope.doc.containerObj;
            $scope.addedMsg = "Container Saved!";
        };

        $scope.addContainerDetails = function () {
            $scope.doc.containerObj = [];
            for (var i = 0; i < $scope.doc.containerNumber; i++) {
                var container = {
                    containerNo: i + 1,
                    containerName: "",
                    gld: "",
                    contrOut: ""
                };
                $scope.doc.containerObj.push(container);
            }
        };

        $scope.addContainerObj = function () {
            $scope.addedMsg = "";
            $(showContainer).modal("show");
            $scope.editFlag = false;
        };

        $scope.editContainerObj = function () {
            $scope.addedMsg = "";
            $scope.doc.containerObj = $scope.doc.contains;
            $scope.doc.containerNumber = $scope.doc.containerObj.length;
            $(showContainer).modal("show");
            $scope.editFlag = true;
        };
        /* Delete the selected record */
        $scope.removeSelectedContainer = function (id) {
            var index = _.findIndex($scope.doc.containerObj, { containerNo: id });
            if (index !== -1) {
                if (index === 0 && $scope.doc.containerObj.length === 1) {
                    $scope.doc.containerObj = [];
                } else {
                    $scope.doc.containerObj.splice(index, 1);
                }
            }
        };

        $scope.addAdditionalContainer = function () {
            var i = 0;
            if (angular.isArray($scope.doc.containerObj)) {
                i = $scope.doc.containerObj.length + 1;
            }
            var container = {
                containerNo: i,
                containerName: "",
                gld: "",
                contrOut: ""
            };
            $scope.doc.containerObj.push(container);
        };


        $scope.delContainerObj = function () {
            $scope.doc.contains.pop();
        };

        $scope.saveDocFields = function () {
            $scope.alertMsg = "";
            $scope.successMsg = "";
            $scope.errorMsg = "";
            var url = configSevice.getUrl() + "import_air/import_air_service.php";
            var obj = commonService.getImportAirDocObj();
            if ($scope.createFlag) {
                obj = setDocNoFields(obj, "create_import_air_doc");
                $scope.action = "Created";
            } else {
                obj = setDocNoFields(obj, "update_import_air_doc");
                obj.id = $routeParams.id;
                $scope.action = "Updated";
            }
            var validate = commonService.saveValidations(obj);
            if (validate.flag === true) {
                http.post(url, obj).then(function (data) {
                    if (angular.isDefined(data.data) && data.data.infocode === "CREATEIMPORTAIRDOCSUCCESS" && $scope.createFlag) {
                        $scope.successMsg = "Doc Fields " + $scope.action + " Successfully for " + $scope.doc.importJobNo + " !";
                        $scope.successMsg = data.data.message;
                        if ($scope.createFlag) {
                            $scope.updateFlag = true;
                            $scope.createFlag = false;
                        }
                        // $scope.doc.importJobNo = data.data.doc_id + configSevice.getJobid();
                        $(showSuccess).modal("show");
                    } else if (angular.isDefined(data.data) && data.data.infocode === "UPDATEIMPORTAIRDOCSUCCESS" && !$scope.createFlag) {
                        $scope.successMsg = "Doc Fields " + $scope.action + " Successfully for " + $scope.doc.importJobNo + " !";
                        $(showSuccess).modal("show");
                    } else {
                        $scope.errorMsg = data.data.message;
                        $(showError).modal("show");
                    }
                }, function (error) {
                    $scope.error = error;
                });
            } else {
                $scope.alertMsg = validate.msg;
                $(showAlert).modal("show");
            }
        };
        $scope.activeMenu = function (val) {
            if (val == 1) {
                $scope.section1 = true;
                $scope.section2 = false;
                $scope.section3 = false;
                $scope.section4 = false;
                $scope.section5 = false;
                $scope.section6 = false;
                $scope.section7 = false;
                $scope.section8 = false;
                $scope.section9 = false;
            }
            else if (val == 2) {
                $scope.section1 = false;
                $scope.section2 = true;
                $scope.section3 = false;
                $scope.section4 = false;
                $scope.section5 = false;
                $scope.section6 = false;
                $scope.section7 = false;
                $scope.section8 = false;
                $scope.section9 = false;
            }
            else if (val == 3) {
                $scope.section1 = false;
                $scope.section2 = false;
                $scope.section3 = true;
                $scope.section4 = false;
                $scope.section5 = false;
                $scope.section6 = false;
                $scope.section7 = false;
                $scope.section8 = false;
                $scope.section9 = false;
            }
            else if (val == 4) {
                $scope.section1 = false;
                $scope.section2 = false;
                $scope.section3 = false;
                $scope.section4 = true;
                $scope.section5 = false;
                $scope.section6 = false;
                $scope.section7 = false;
                $scope.section8 = false;
                $scope.section9 = false;
            }
            else if (val == 5) {
                $scope.section1 = false;
                $scope.section2 = false;
                $scope.section3 = false;
                $scope.section4 = false;
                $scope.section5 = true;
                $scope.section6 = false;
                $scope.section7 = false;
                $scope.section8 = false;
                $scope.section9 = false;
            }
            else if (val == 6) {
                $scope.section1 = false;
                $scope.section2 = false;
                $scope.section3 = false;
                $scope.section4 = false;
                $scope.section5 = false;
                $scope.section6 = true;
                $scope.section7 = false;
                $scope.section8 = false;
                $scope.section9 = false;
            }
            else if (val == 7) {
                $scope.section1 = false;
                $scope.section2 = false;
                $scope.section3 = false;
                $scope.section4 = false;
                $scope.section5 = false;
                $scope.section6 = false;
                $scope.section7 = true;
                $scope.section8 = false;
                $scope.section9 = false;
            }
            else if (val == 8) {
                $scope.section1 = false;
                $scope.section2 = false;
                $scope.section3 = false;
                $scope.section4 = false;
                $scope.section5 = false;
                $scope.section6 = false;
                $scope.section7 = false;
                $scope.section8 = true;
                $scope.section9 = false;
            }
            else if (val == 9) {
                $scope.section1 = false;
                $scope.section2 = false;
                $scope.section3 = false;
                $scope.section4 = false;
                $scope.section5 = false;
                $scope.section6 = false;
                $scope.section7 = false;
                $scope.section8 = false;
                $scope.section9 = true;
            }
        };

    }]);
